---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: homepage
  namespace: default
  labels:
    app.kubernetes.io/name: homepage
secrets:
  - name: homepage
---
apiVersion: v1
kind: Secret
type: kubernetes.io/service-account-token
metadata:
  name: homepage
  namespace: default
  labels:
    app.kubernetes.io/name: homepage
  annotations:
    kubernetes.io/service-account.name: homepage
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: homepage
  namespace: default
  labels:
    app.kubernetes.io/name: homepage
data:
  kubernetes.yaml: |
    mode: cluster
  settings.yaml: ""
    #providers:
    #  finnhub: TODO
  custom.css: ""
  custom.js: ""
  bookmarks.yaml: |
    - Webpage Shortcuts:
        - Mark's Github (home):
            - abbr: GH
              href: https://github.com/MurphyMarkW/home.git
        - fnSystems Homepage:
            - abbr: FN
              href: https://fn.systems/
        - Tailscale Admin Panel:
            - abbr: TS
              href: https://tailscale.com/admin/
  services.yaml: |
    - Services:
        - Nextflow:
            href: http://nextflow/
            description: Bioinformations Workflows
        - marQ:
            href: http://marq/
            description: My quantum algorithm stuff!
        - mVIDIA:
            href: http://mvidia/
            description: Machine learning stuff!
        #- Jellyfin:
        #    href: http://jellyfin/
        #    description: Media Server
        #    widgets:
        #      - type: jellyfin
        #        url: http://jellyfin/
        #        key: TODO
        #        enableBlocks: true
        #        enableNowPlaying: true
        #        enableUser: true
        #        showEpisodeNumber: true
        #        expandOneStreamToTwoRows: false

    - Hardware:
        - markBox:
            href: ssh://markbox
            description: Desktop ¯\_(ツ)_/¯
        - printer:
            href: http://printer.local/
            description: Prusa i3 MK3S
        - monitor:
            href: ssh://monitor
            description: Raspberry Pi 5
        - worker.1:
            href: ssh://worker.1
            description: Raspberry Pi 4
        - worker.2:
            href: ssh://worker.2
            description: Raspberry Pi 4
        - worker.3:
            href: ssh://worker.3
            description: Raspberry Pi 4
  widgets.yaml: |
    #- stocks:
    #    provider: finnhub
    #    color: true # optional, defaults to true
    #    cache: 1 # optional, default caches results for 1 minute
    #    watchlist:
    #      - AAPL
    #      - MSFT
    #      - GOOG
    #      - AMD
    #      - INTC
    #      - NVDA
    #      - QCOM
    #      - TSM
    #      - SOXX
    #      - BTCUSD
    - kubernetes:
        cluster:
          show: true
          cpu: true
          memory: true
          showLabel: true
          label: "cluster"
        nodes:
          show: true
          cpu: true
          memory: true
          showLabel: true
    - resources:
        backend: resources
        expanded: true
        cpu: true
        memory: true
        network: default
    - search:
        provider: duckduckgo
        target: _blank
  docker.yaml: ""
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: homepage
  labels:
    app.kubernetes.io/name: homepage
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
      - pods
      - nodes
    verbs:
      - get
      - list
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
      - list
  - apiGroups:
      - traefik.io
    resources:
      - ingressroutes
    verbs:
      - get
      - list
  - apiGroups:
      - metrics.k8s.io
    resources:
      - nodes
      - pods
    verbs:
      - get
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: homepage
  labels:
    app.kubernetes.io/name: homepage
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: homepage
subjects:
  - kind: ServiceAccount
    name: homepage
    namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: homepage
  namespace: default
  labels:
    app.kubernetes.io/name: homepage
  annotations:
spec:
  type: LoadBalancer
  ports:
    - port: 3000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: homepage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: homepage
  namespace: default
  labels:
    app.kubernetes.io/name: homepage
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: homepage
  template:
    metadata:
      labels:
        app.kubernetes.io/name: homepage
    spec:
      serviceAccountName: homepage
      automountServiceAccountToken: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      containers:
        - name: homepage
          image: "ghcr.io/gethomepage/homepage:latest"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          volumeMounts:
            - mountPath: /app/config/custom.js
              name: homepage-config
              subPath: custom.js
            - mountPath: /app/config/custom.css
              name: homepage-config
              subPath: custom.css
            - mountPath: /app/config/bookmarks.yaml
              name: homepage-config
              subPath: bookmarks.yaml
            - mountPath: /app/config/docker.yaml
              name: homepage-config
              subPath: docker.yaml
            - mountPath: /app/config/kubernetes.yaml
              name: homepage-config
              subPath: kubernetes.yaml
            - mountPath: /app/config/services.yaml
              name: homepage-config
              subPath: services.yaml
            - mountPath: /app/config/settings.yaml
              name: homepage-config
              subPath: settings.yaml
            - mountPath: /app/config/widgets.yaml
              name: homepage-config
              subPath: widgets.yaml
            - mountPath: /app/config/logs
              name: logs
      volumes:
        - name: homepage-config
          configMap:
            name: homepage
        - name: logs
          emptyDir: {}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: homepage
  namespace: default
  labels:
    app.kubernetes.io/name: homepage
  annotations:
    gethomepage.dev/description: Dynamically Detected Homepage
    gethomepage.dev/enabled: "true"
    gethomepage.dev/group: Cluster Management
    gethomepage.dev/icon: homepage.png
    gethomepage.dev/name: Homepage
spec:
  rules:
    - host: "homepage"
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: homepage
                port:
                  number: 3000
